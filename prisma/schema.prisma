generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  firstname String 
  lastname  String
  email     String    @unique
  password  String 
  role      Role      @default(USER) // Role field to distinguish between user roles

  // Relation to Booking
  bookings  Booking[] // One User can have many Bookings
}

enum Role {
  ADMIN
  USER
}

model Event {
  id              Int       @id @default(autoincrement())
  title           String
  description     String
  date            DateTime
  availableSeats  Int

  // Relation to Booking
  bookings        Booking[] // One Event can have many Bookings
}

model Booking {
  id             Int       @id @default(autoincrement())
  userId         Int       // Foreign key to User
  eventId        Int       // Foreign key to Event
  dateBooked     DateTime
  numberOfPlaces Int
  status         Status    @default(PENDING)

  // Relationships
  user           User      @relation(fields: [userId], references: [id], onDelete: Cascade) // Cascade delete if User is deleted
  event          Event     @relation(fields: [eventId], references: [id], onDelete: Cascade) // Cascade delete if Event is deleted
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}
